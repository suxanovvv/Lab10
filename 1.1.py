#1. Сформувати функцію, що буде обчислювати факторіал заданого користувачем
#натурального числа n.

import timeit

#Програмна реалізація рекурсивного рішення.
def fac_rial(n):
    if n==0 or n==1:
        return 1
    else:
        return fac_rial(n-1)*n


#Програмна реалізація ітераційного рішення.
def fact_iter(x):
    count=1
    for i in range(1, x+1):
        count*=i
    return count
    print('Час виконання: ', t)


n=int(input('Введіть число, факторіал якого потрібно знайти: '))
print('Рекурсивне рішення факторіалу: ')
print(fac_rial(n))
t=timeit.timeit('"-".join(str(n) for n in range(100))', number=10000)
print('Час виконання: ', t)
print()


x=int(input('Знову введіть число, факторіал якого потрібно знайти: '))
print('Ітераційне рішення факторалу: ')
print(fact_iter(x))
v=timeit.timeit('"-".join(str(n) for n in range(100))', number=10000)
print('Час виконання: ', v)

#Отже, у даній програмі ми використали два способи програмного обичлення факто-
#ріалу: рекурсивний та ітераційний. Дві програми спрацьовують достатньо швидко.
#Але, на мою думку, ітераційний метод все-таки краще, так як тут використовується
#менше порівнянь.
        
    
    
